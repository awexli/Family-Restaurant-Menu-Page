/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/category-utility.js":
/*!*********************************!*\
  !*** ./src/category-utility.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst categoryUtilityModule = (() => {\n  const rowFragment = new DocumentFragment();\n  const cellFragment = new DocumentFragment();\n  const overlayContent = document.querySelector(\".modal-body\");\n  const modalTitle = document.querySelector(\".modal-title\");\n  const modalTable = document.createElement(\"table\");\n  modalTable.className = \"cat-table\";\n\n  /**\n   * Populate a table element for the modal\n   * @param {{string: string}} category\n   * @param {String} title\n   */\n  const populateTable = (category, title) => {\n    \n    // clear previous table\n    if (modalTable.hasChildNodes) {\n      while (modalTable.firstChild) {\n        modalTable.removeChild(modalTable.lastChild);\n      }\n    }\n    \n    let chineseInnerText = \"\";\n\n    for (let row in category) {\n      const rowData = category[row];\n      for (let column in rowData) {\n        const currentCell = document.createElement(\"td\");\n        currentCell.innerText = rowData[column];\n        switch (column) {\n          case \"chin\":\n            // store chinese text to be combined into one column\n            chineseInnerText = currentCell.innerText;\n            break;\n          case \"eng\":\n            // combine chinese and english text into one column\n            const englishInnerText = currentCell.innerText;\n            currentCell.innerText = `${chineseInnerText} \\n\\n ${englishInnerText}`;\n            currentCell.className = \"description\";\n          default:\n            cellFragment.appendChild(currentCell);\n            break;\n        }\n      }\n      const tableRow = document.createElement(\"tr\");\n      tableRow.appendChild(cellFragment);\n      rowFragment.appendChild(tableRow);\n    }\n    modalTable.appendChild(rowFragment);\n    // apply menu to modal\n    overlayContent.appendChild(modalTable);\n    modalTitle.innerText = title;\n  };\n\n  /**\n   * Returns new object for a category\n   * @param {Number} n - length of category\n   * @param {Array.<String>} data - array holding category information\n   * @param {String} letter - letter of category\n   */\n  const populateObject = (n, data, letter = \"\", isDefault = true) => {\n    const newObject = {};\n    let currentDish;\n    if (isDefault) {\n      for (let i = 0; i < n; i++) {\n        currentDish = data[i].split(\",\")\n        newObject[`r${i + 1}`] = {\n          num: `${letter}${i + 1}`,\n          chin: currentDish[0],\n          eng: currentDish[1],\n          price: currentDish[2],\n        };\n      }\n    } else {\n      for (let i = 0; i < n; i++) {\n        currentDish = data[i].split(\",\")\n        newObject[`r${i + 1}`] = {\n          num: `${letter}${i + 1}`,\n          chin: currentDish[0],\n          eng: currentDish[1],\n        };\n      }\n    }\n\n    return newObject;\n  };\n\n  /**\n   * Returns a new array of strings with no whitespace\n   * @param {string} literal - template literal\n   */\n  const cleanTemplateLiteral = (literal) => {\n    const arr = [];\n    const literalArray = literal.split(\"\\n\");\n\n    for (let elem of literalArray) {\n      arr.push(elem.trim());\n    }\n\n    return arr;\n  };\n\n  return {\n    populateTable,\n    populateObject,\n    cleanLiteral: cleanTemplateLiteral,\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (categoryUtilityModule);\n\n\n//# sourceURL=webpack:///./src/category-utility.js?");

/***/ }),

/***/ "./src/category.js":
/*!*************************!*\
  !*** ./src/category.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _category_utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./category-utility */ \"./src/category-utility.js\");\n\n\nconst categories = (() => {\n  const houseSpecial = () => {\n    const houseCSV = `客家鹽焗雞,Salt & Baked Chicken,(半 Half) 14.95 (Whole) 28.00\n    招牌華香雞（半）,House Special Steamed Chicken (Half),13.95\n    豬肚撈雞（半）,Pork Stomach w/ Chicken (Half),17.95\n    惠州梅菜扣肉,Chinese Bacon w/ Presevered Green,14.95\n    客家煎釀滑豆腐,House Special Pan Fried Stuffed Tofu,12.95\n    客家黃酒薑炒雞,Stir Fry Chicken w/ Ginger in Wine Sauce,16.95\n    胡椒支竹豬肚雞煲,Chicken - Pork Stomach & Bean Curd w/ Pepper in Pot,15.95\n    客家炒大腸,Hakka Style Stir Fry Intestine,12.95\n    燒汁雜菌炒肥牛,Beef & Mixed Mushroom in Teriyaki Sauce,13.95\n    美極磨菇牛柳粒,Steak Cube & Mushroom in Maggie Sauce,15.95\n    家鄉小炒皇,House Special Stir Fry Mixed,13.95\n    椒鹽豬爽肉,Salt & Pepper Pork Neck,11.95\n    金沙鹹蛋黃炒蟹,Stir Fry Crab w/ Salted Egg,Seasonal\n    九層塔炒蜆,House Special Basil Clams,16.95\n    避風塘炒蜆,Hong Kong Style Spicy Clams,16.95\n    豉油皇老虎大蝦,Tiger Prawns w/ Soy Sauce (8),20.95\n    西汁煎老虎大蝦,Tiger Prawns in Teriyaki Sauce (8),20.95\n    家鄉雙味蒸塘虱,Cat Fish in Two Kind of Sauce (Whole),28.95\n    川味朵椒蒸魚頭腩,Steamed Fish Head w/ Spicy Pepper,13.95\n    豉椒炒雙魷魚,Spicy Squid w/ Black Pepper Sauce,12.95\n    薑蔥砂鍋魚頭,Fish Head w/ Ginger and Scallion in Pot,13.95\n    家鄉菜脯粒煎蠔餅,Pan Friend Oyster w/ Preserved Green,13.95\n    黑松露海鮮玉子豆腐,Black Truffle Seafood & Japanese Tofu,13.95\n    豉汁涼瓜雞球,Chicken & Bitter Melon in Black Pepper Sauce,11.95\n    玉子豆腐拌金玉菇,Japanese Tofu w/ Baby Mushroom,12.95\n    椒鹽田雞鹹魚粒,Salt & Pepper Frog w/ Diced Salted Fish,16.95\n    紅燒乳鴿,Roasted Squab,12.95\n    客家特色（炆）綠鴨,Hakka Style Braised Duck (半 Half),16.95\n    荷葉糯米鴨,Stuffed Duck in Lotus Leaf (Order in Advance),48.00\n    脆皮糯米雞,Stuffed Chicken w/ Sticky Rice (Order in Advance),39.00`;\n\n    const houseData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(houseCSV);\n    const houseObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(houseData.length, houseData, \"S\");\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(houseObject, \"House Special\\n(特色菜)\");\n  };\n\n  const appetizers = () => {\n    const appetizersCSV = `炸春卷,Egg Rolls (4),5.95\n    窩貼,Pot Stickers (6), 6.95\n    脆皮炸蝦,Deep Fried Prawns (8),10.95\n    椒鹽生蠔,Salted & Pepper Oysters,11.95\n    招牌手撕雞,House Special Shredded Chicken Salad (Half),16.95\n    椒鹽雞翼,Salt & Pepper Chicken Wings,9.95\n    金沙鹹蛋黃南瓜,Pumpkin Strip w/ Salted Eggs,9.95\n    椒鹽魷魚,Salt & Pepper Squids,11.95`;\n    const appetizersData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(appetizersCSV);\n    const appetizersObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      appetizersData.length,\n      appetizersData,\n      \"A\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(appetizersObject, \"Appetizers\\n(餐前小食)\");\n  };\n\n  const soup = () => {\n    const soupCSV = `瑤柱海皇豆腐羹,Dry Scallop w/ Seafood and Tofu Soup,12.95\n    海鮮南瓜茸羹,Seafood and Pumpkin Soup,12.95\n    西湖牛肉豆腐羹,Minced Beef and Tofu Soup,10.95\n    雞茸粟米羹,Chicken w/ Sweet Corn Soup,10.95\n    雞絲魚肚羹,Chicken w/ Fish Maw Soup,12.95\n    酸辣湯,Hot & Sour Soup,10.95\n    酸辣雲吞湯,Hot & Sour Won Ton Soup,10.95\n    菜雞雲吞湯,Chicken & Vegetable Won Ton Soup,10.95\n    招牌雲吞湯,House Special Won Ton Soup,12.95\n    客家薑炒雞酒湯,House Special Cooked Chicken & Wine Soup,16.95\n    雞菜雜湯,Mixed Vegetable w/ Chicken Soup,10.95\n    客家布袋雞湯（原隻豬肚包雞）,House Special Steamed Pork Stomach w/ Chicken Soup (Order in Advance),59.00`;\n    const soupData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(soupCSV);\n    const soupObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(soupData.length, soupData, \"B\");\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(soupObject, \"Soup (湯羹類)\");\n  };\n\n  const seafood = () => {\n    const seafoodCSV = `麻辣豉椒炒規,Hot & Spicy Clams,16.95\n    上湯花雕浸醉蜆,Wine Clams in Supreme Broth,16.95\n    X0醬泡魚片,Fish Fillet in X.O. Sauce,13.95\n    九層塔炒魚片,Basil Fish Fillet,13.95\n    碧綠合桃蝦,Walnut Prawns w/ Vegtable,14.95\n    黑松露炒花枝蝦球,Black Truffle w/ Squids & Prawns,15.95\n    雜菌雲耳炒蝦球,Prawns w/ Mixed Mushroom & Fungus,13.95\n    沙茶花枝雞片,Chicken & Squid in Satay Sauce,13.95\n    椒鹽魚片,Salt & Pepper Fish Fillet,13.95\n    宮保蝦球,Kung Pao Chicken,13.95\n    粟米斑塊,Fillet Fish w/ Corn,13.95\n    薑蔥#生蠔,Baked Oysters w/ Ginger & Scallion,16.95\n    豉椒焗生蠔,Baked Oyster w/ Spicy Pepper Sauce,16.95\n    雙色蒸水蛋,Steamed Two Kind of Egg,11.95`;\n    const seafoodData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(seafoodCSV);\n    const seafoodObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      seafoodData.length,\n      seafoodData,\n      \"C\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(seafoodObject, \"Seafood (海鮮類)\");\n  };\n\n  const chickenDuckFrog = () => {\n    const chickenDuckFrogCSV = `鹹蛋黃南瓜田雞,Frog & Pumpkin Fried w/ Salted Egg Yolk,16.95\n    九層塔田雞,House Special Basil Frog,16.95\n    鹹魚粒椒鹽田雞,Salt & Pepper Frog w/ Diced Salted Fish,16.95\n    X0醬雜菌炒田雞,Stir Fry Frog & Mixed Mushroom w/ X.O. Sauce,16.95\n    黑松露油泡田雞,Black Truffle Frog,17.95\n    豉汁涼瓜炒田雞,Frog & Bitter Melon w/ Black Bean Sauce,16.95\n    宮保雞,Kong Pow Chicken,11.95\n    檸檬雞,Lemon Chicken,11.95\n    左宗雞,General Chicken,11.95\n    咕嚕雞,Sweet & Sour Chicken,11.95\n    豉汁四季豆雞,String Bean Chicken w/ Black Bean Sauce,11.95\n    雜菜冬菇雞,Chicken w/ Mixed Vegetable & Mushroom,11.95\n    幹烹雞翼, Chicken Wing (8),11.95`;\n    const chickenDuckFrogData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(chickenDuckFrogCSV);\n    const chickenDuckFrogObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      chickenDuckFrogData.length,\n      chickenDuckFrogData,\n      \"D\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(\n      chickenDuckFrogObject,\n      \"Chicken & Duck & Frog\\n(雞鴨田雞類)\"\n    );\n  };\n\n  const beefLamb = () => {\n    const beefLambCSV = `欖菜芥蘭炒牛肉,Chinese Broccoli w/ Olive,13.95\n    西蘭白菜炒牛肉,Beef w/ Broccoli & Bok Choy,13.95\n    雜菌菇炒牛肉,Beef w/ Mixed Mushroom,13.95\n    蒙古牛肉/雞肉,Mongolian Beef or Chicken,13.95\n    美極磨菇牛柳,Steak & Mushroom w/ Maggie Sauce,15.95\n    沙茶牛肉炒四季豆,Beef & String Bean w/ Satay Sauce,13.95\n    黑椒雜菌炒牛柳,Steak & Mixed Mushroom w/ Black Pepper Sauce,15.95\n    X0醬珍菌炒羊肉,Lamb & Mixed Mushrooms w/ X.0. Sauce,16.95\n    薑蔥大蒜炒羊肉,Lamb w/ Ginger & Scallion,16.95\n    虎皮尖椒爆羊肉,Lamb w/ Hot Pepper,16.95`;\n    const beefLambData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(beefLambCSV);\n    const beefLambObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      beefLambData.length,\n      beefLambData,\n      \"E\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(\n      beefLambObject,\n      \"Beef & Lamb (牛羊類)\"\n    );\n  };\n  const pork = () => {\n    const porkCSV = `避風塘大腸,Intestine Fried w/ Garlic & Hot Pepper,13.95\n    X0醬豆仔炒豬肚,Pork Stomach & String Beans w/ X.O. Sauce,13.95\n    鹹魚蒸肉餅,Steamed Pork w/ Salted Fish,11.95\n    京都肉排,Peking Spareribs,11.95\n    糖醋咕嚕肉,Sweet & Sour Pork,11.95\n    臘腸冬菜蒸肉餅,Steamed Pork w/ Chinese Sausage & Preserved Green,11.95\n    肉崧麻婆豆腐,Ma Pao Tofu w/ Preserved Green,11.95\n    鹹酸菜炒肉絲,Shredded Pork w/ Preserved Green,11.95\n    嬌頭生炒骨,Shallot Spareribs,11.95\n    椒鹽豆仔排骨,Salt & Papper Spareribs w/ String Beans,11.95\n    X0醬肉崧四季豆,Minced Pork & String Bean w/ X.O. Sauce,11.95\n    什菌肉片,Pork w/ Mixed Mushroom,12.95\n    虎皮尖椒炒豬肚,Pork Stomach w/ Spicy Pepper,13.95\n    鹹酸菜炒豬肚,Pork Stomach w/ Preserved Green,13.95`;\n    const porkData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(porkCSV);\n    const porkObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      porkData.length,\n      porkData,\n      \"F\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(\n      porkObject,\n      \"Pork (豬肉類)\"\n    );\n  };\n\n  const clayPot = () => {\n    const clayPotCSV = `栗子雜菌雞煲,Chicken w/ Chestnut & Mixed Mushroom in Clay Pot,13.95\n    啫啫乾蔥豆豉雞煲,Chicken in Bone w/ Black Bean Sauce in Clay Pot,13.95\n    招牌涼瓜塘虱煲,Cat Fish & Bitter Melon in Clay Pot,15.95\n    大蒜薑蔥魚頭腩煲,Fish Head w/ Garlic - Ginger & Scallion,13.95\n    家鄉支竹羊腩煲,Lamb w/ Bean Curd in Clay Pot,17.95\n    大千海鮮豆腐煲,Spicy Seafood & Tofu in Clay Pot,12.95\n    紅燒豆腐斑腩煲,Braised Fried Tofu & Fish Fillet in Clay Pot,12.95\n    柱候牛腩煲,Beef Stew in Clay Pot,13.95\n    沙茶雞粒茄子煲,Satay Chicken Diced w/ Eggplant,12.95\n    咸魚雞粒豆腐煲,Salted Fish & Chicken in Clay Pot,12.95\n    節瓜肉崧粉絲煲,Chinese Melon - Minced Pork & Vermicelli in Clay Pot,11.95\n    客家五更長旺煲,Pork Intestines & Tofu in Chili Sauce,12.95`;\n    const clayPotData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(clayPotCSV);\n    const clayPotObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      clayPotData.length,\n      clayPotData,\n      \"G\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(clayPotObject, \"Clay Pot (煲仔類)\");\n  };\n\n  const mushu = () => {\n    const mushuCSV = `木須肉, Mu Shu Pork,12.95\n    木須雞, Mu Shu Chicken,12.95\n    木須菜, Mu Shu Vegetable,12.95\n    木須蝦, Mu Shu Shrimp,12.95`;\n    const mushuData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(mushuCSV);\n    const mushupObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(mushuData.length, mushuData, \"H\");\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(mushupObject, \"Mu Shu (木須類)\\n(6 Pancakes)\");\n  };\n\n  const lettuceWrap = () => {\n    const lettuceWrapCSV = `豬肉生菜包,Minced Pork w/ Lettuce Wraps,12.95\n    雞肉生菜包,Minced Chicken w/ Lettuce Wraps,12.95\n    海鮮生菜包,Minced Seafood w/ Lettuce Wraps,13.95\n    素菜生菜包,Minced Vegetable w/ Lettuce Wraps,12.95`;\n    const lettuceWrapData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(lettuceWrapCSV);\n    const lettuceWrapObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      lettuceWrapData.length,\n      lettuceWrapData,\n      \"I\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(\n      lettuceWrapObject,\n      \"Lettuce Wraps (生菜包)\\n(6 Lettuces)\"\n    );\n  };\n\n  const vegetables = () => {\n    const vegetablesCSV = `蒜茸冬菜蒸茄子,Steamed Eggplant w/ Garlic & Preserved Green,11.95\n    雜菌雲耳炒碧綠,Sauteed Mixed Mushroom & Fungus w/ Vegetable,11.95\n    椒鹽茄子豆腐粒,Salt & Pepper Eggplant & Fried Tofu Cube,10.95\n    欖菜肉崧四季豆,Minced Pork & String Beans w/ Olive,11.95\n    腐皮白果上湯豆苗,Bean Sprout w/ Bean Curd Sheet & Ginkgo in Broth,15.95\n    上湯皮蛋浸茶菜,Mustard Green & Preserved Eggs in Broth,11.95\n    鹹豬骨上湯芥菜,Mustard Green in Salted Bone Broth,11.95\n    九層塔茄子,House Special Basil Eggplant,11.95\n    川味魚香茄子,Spicy Eggplant,11.95\n    糖酒/蠔油炒芥蘭,Sauteed Chinese Broccoli w/ Rice Wine or Oyster Sauce,10.95\n    油鹽炒白莱,Sauteed Bok Choy,10.95\n    蒜茸四季豆,Sauteed Garlic String Beans,11.95\n    蒜茸炒豆苗,Sauteed Garlic Pea Sprouts,Seasonal\n    冬菇白菜,Bok Choy and Chinese Mushroom,11.95\n    紅燒冬菇豆腐,Braised Fried Tofu,10.95`;\n    const vegetablesData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(vegetablesCSV);\n    const vegetablesObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      vegetablesData.length,\n      vegetablesData,\n      \"J\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(vegetablesObject, \"Vegetables\\n(健康素菜類)\");\n  };\n\n  const chowMeinFun = () => {\n    const chowMeinCSV = `家鄉炒米,House Special Fried Rice Noodle,11.95\n    星州炒米,Singapore Style Fried Rice Noodle,11.95\n    泰式炒米,Thai Style Fried Rice Noodle,11.95\n    韭皇干炒牛/雞河,Beef/Chicken Dry Chow Fun w/ Yellow Chive,11.95\n    涼瓜雞乾炒河粉,Chicken & Bitter Melon Dry Chow Fun,11.95\n    星馬炒貴刁,Malaysia Style Curry Chow Fun,11.95\n    豉椒牛/雞濕炒河,Beef or Chicken Chow Fun in Black Bean Sauce,12.95\n    海鮮XO醬濕炒河,Seafood Chow Fun in X.O. Sauce,13.95\n    蒜茸牛油蝦炒粗麵,Garlic & Butter Shrimp Chow Mein,12.95\n    沙爹牛粒濕炒河粉,Beef Cube Chow Fun w/ Satay Sauce,12.95\n    雞/牛/叉燒炒粗麵,Chicken/Beef/BBQ Pork Chow Mein, 10.95\n    招牌海鮮炒粗麵,House Special Seafood Chow Mein,12.95\n    九層塔海鮮炆伊麵,House Special Basil Seafood E-Fu Noodle,11.95\n    咖喱牛粒炆伊麵,Curry Beef Cube E-Fu Noodle,11.95\n    韭皇干燒伊麵,Yellow Chive E-Fu Noodle,10.95\n    瑤柱金玉菇炆伊麵,Dried Scallop & Mushroom E-Fu Noodle,12.95\n    豉油皇炒細麵,Soy Sauce Fried Thin Chow Mein,10.95`;\n\n    const chowMeinData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(chowMeinCSV);\n    const chowMeinObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      chowMeinData.length,\n      chowMeinData,\n      \"K\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(chowMeinObject, \"Chow Mein & Fun\\n(粉麵類)\");\n  };\n\n  const friedRice = () => {\n    const friedRiceCSV = `荷葉生炒糯米飯,Sticky Rice in Lotus Leaf,14.00\n    黑松露海鮮粒炒飯,Black Truffle Seafood Fried Rice,13.95\n    X0醬金雙蛋炒飯,Double Eggs Fried Rice w/ X.O. Sauce,13.95\n    瑤柱蛋白炒飯炒,Dried Scallop w/ Egg White Fried Rice,13.95\n    楊州炒飯,Yang Chow Fried Rice,12.95\n    雞/牛/又燒炒飯,Chicken/Beef/BBQ Pork Fried Rice,10.95\n    鹹魚雞粒炒飯,Chicken & Salted Fish Fried Rice,12.95\n    鹹酸菜雞粒炒飯,Preserved Green & Egg Fried Rice,10.95\n    菠蘿海鮮粒炒飯,Pinapple Shrimp Fried Rice,11.95\n    福建炒飯,Fukien Fried Rice,12.95\n    X0醬牛粒豆豉炒飯,Beef Cube w/ Black Bean Fried Rice in X.O. Sauce,11.95`;\n\n    const friedRiceData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(friedRiceCSV);\n    const friedRiceObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      friedRiceData.length,\n      friedRiceData,\n      \"L\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(friedRiceObject, \"Fried Rice\\n(炒飯類)\");\n  };\n\n  const congee = () => {\n    const congeeCSV = `皮蛋粥肉瘦,Preserved Egg & Pork Congee,7.95\n    生滾魚片粥,Fish Fillet Congee,8.95\n    海鮮粥,Shrimp Congee,8.95\n    生滾牛肉粥,Beef Congee,7.95\n    瑤柱田雞粥,Frog w/ Dried Scallop Congee,9.95\n    貴妃蚌粥,Empress Clams Congee,10.95\n    砂鍋蟹/龍蝦粥,Crab or Lobster Congee,Seasonal\n    鹹豬骨白菜粥,Salted Pork Bone w/ Bok Choy Congee,8.95\n    黃毛雞粥,Free Range Chicken Congee,9.95\n    清淡白粥,Plain Congee,4.50\n    白飯,Steamed Rice,1.50`;\n    const congeeData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(congeeCSV);\n    const congeeObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      congeeData.length,\n      congeeData,\n      \"M\"\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(congeeObject, \"Congee (粥類)\");\n  };\n\n  const ricePlates = () => {\n    const ricePlatesCSV = `四季豆雞球/牛肉飯,Chicken & String Bean in Black Bean Sauce over Rice,9.50\n    涼瓜雞球/牛肉/排骨飯,Bitter Melon Chicken/Beef/Spareribs over Rice,9.50\n    蒙古雞肉/牛肉飯,Mongolian Chicken or Beef over Rice,9.50\n    宮保雞飯,Kung Pao Chicken,9.50\n    干炒雞/牛河,Beef/Chicken Dry Chow Fun,9.50\n    蒜茸牛油雞炒粗麵,Chicken w/ Garlic & Butter over Thick Noodle,9.50\n    鹹酸菜大腸/豬肚飯,Pork Intestines/Stomach & Preserved Green over Rice,9.50\n    鹹酸菜肉絲豆腐飯,Shredded Pork - Tofu & Preserved Green over Rice,9.50\n    椒鹽豆仔豬爽肉/豬扒飯,Salt & Pepper String Bean & Pork Neck or Pork Chop,9.50\n    炸菜肉片飯,Pork & Preserved Vegetable over Rice,9.50\n    豉汁豆仔肉片飯,Pork & String Bean in Black Bean Sauce over Rice,9.50\n    豆腐排骨飯,Spareribs & Tofu over Rice,9.50\n    紅燒肉崧茄子飯,Braised Minced Pork & Eggplant over Rice,9.50\n    紅燒豆腐斑腩飯,Braised Fish Fillet w/ Fried Tofu over Rice,9.50\n    肉崧麻婆豆腐飯,Ma Pao Tofu w/ Minced Pork over Rice,9.50\n    XO醬肉崧四季豆飯,Minced Pork & String Bean over Rice,9.50\n    茄子牛崧/雞粒飯,Eggplant Beef / Chicken over Rice,9.50\n    蘿蔔牛腩飯,Beef Stew & Turnip over Rice,9.50\n    咖喱牛腩飯,Curry Beef Stew over Rice,9.50\n    牛腩湯麵/粉,Beef Stew over Noodle or Rice Noodle Soup,9.50\n    排骨湯麵/粉,Spareribs over Noodle or Rice Noodle Soup,9.50\n    家鄉炒米,House Special Pan Fried Rice Noodle,9.50`;\n    const ricePlatesData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(ricePlatesCSV);\n    const ricePlatesObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      ricePlatesData.length,\n      ricePlatesData,\n      \"\",\n      false\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(ricePlatesObject, \"Rice Plates & Soup\\n(午餐碟飯送例湯) \\n\\n (9.50 Each)\");\n  };\n\n  const crab = () => {\n    const crabCSV = `咸蛋黃,Salted Egg Yolk\n    避風塘,Fried w/ Garlic & Hot Pepper\n    椒鹽,Salt & Pepper\n    牛油胡椒,Butter & Pepper\n    蒜茸粉絲,Garlic & Vermicelli\n    大千粉絲,Spicy Garlic & Vermicelli\n    甘香涼瓜,Bitter Melon\n    鹹菜,Preserved Salted Vegetable\n    薑蔥,Ginger & Scallion\n    沙茶粉絲,Satay & Vermicelli`;\n    const crabData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(crabCSV);\n    const crabObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      crabData.length,\n      crabData,\n      \"\",\n      false\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(crabObject, \"Crab 蟹 (Market Price)\\n\\nPlease Choose One of the Following Cooking Methods\\n(蟹有下列烹調方法可供選擇)\");\n  };\n  \n  const lobster = () => {\n    const lobsterCSV = `蒜茸粉絲,Garlic & Vermicelli\n    XO醬,X.O. Sauce\n    薑蔥,Ginger & Scallion\n    豉油皇,Soy Sauce\n    咸蛋黃,Salted Egg Yolk`;\n    const lobsterData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(lobsterCSV);\n    const lobsterObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      lobsterData.length,\n      lobsterData,\n      \"\",\n      false\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(lobsterObject, \"Lobster (龍蝦) (Market Price)\\n\\nPlease Choose One of the Following Cooking Methods\\n(龍蝦有下列烹調方法可供選擇)\");\n  };\n\n  const takeaway = () => {\n    const takeawayCSV = `蒙古雞肉/牛肉,Mongolian Chicken or Beef\n    沙茶花枝雞片,Satay Squid & Chicken\n    左宗棠雞,General's Chicken\n    宫保雞,Kung Pao Chicken\n    豉汁四季豆雞球,Chicken & String Bean in Black Bean Sauce\n    干炒雞/牛河粉,Chicken or Beef Dry Chow Fun\n    XO醬四季豆炒豬肚,Sauteed Pork Stomach & String Bean w/ X.O. Sauce\n    椒鹽豆仔肉排,Salt & Pepper Spareribs w/ String Beans\n    京都肉排,Peking Spareribs\n    咕嚕肉/雞,Sweet and Sour Pork/Chicken\n    喬頭生炒骨,Shallot Spareribs\n    臘腸冬菜/梅菜蒸肉餅,Steamed Minced Pork w/Chinese Sausage\n    肉崧麻婆豆腐,Ma Pao Tofu w/ Minced Pork\n    椒鹽四季豆豬爽肉,Salt & Pepper Pork Neck & String Beans\n    XO醬芹心炒魚片,Fish Fillet & Celery in X.0. Sauce\n    紅燒豆腐斑腩煲,Braised Fish Fillet w/ Fried Tofu\n    沙茶雞粒茄子煲,Satay Chicken & Eggplant in Pot\n    五更長旺煲,Pork Intestines & Tofu in Chili Sauce\n    鹹魚雞粒豆腐煲,Chicken & Salted Fish & Tofu in Pot\n    欖菜肉崧四季豆,Minced Pork & String Bean w/ Olive\n    上湯鹹豬骨浸芥菜,Mustard Green in Salted Pork Bone in Broth\n    雜菌雲耳炒碧綠,Sauteed Vegetable - Mixed Mushroom & Fungus\n    炸菜肉片,Pork & Preserved Vegetable\n    蒜茸四季豆,Sauteed String Beans\n    冬菇紅燒豆腐,Braised Fried Tofu & Mushroom\n    紅燒肉崧茄子,Braised Minced Pork & Eggplant\n    上湯皮蛋浸芥菜,Mustard Green & Preserved Eggs in Supreme Broth\n    蒜茸豉汁爆虎皮尖椒,Pan Seared Green Chilli Pepper in Garlic and Black Pepper Sauce\n    家鄉菜脯煎蛋,Pan Fried Egg w/ Preserved Green\n    雙色蒸滑蛋,Steamed Two Kind of Egg\n    脆塘海鮮滑豆腐,Steamed Seafood & Tofu\n    豉油皇炒細麵,Soy Sauce Fried Thin Noodle\n    家鄉炒米,House Special Pan Fried Rice Noodle\n    泰式炒米,Thai Style Fried Rice Noodle XO\n    醬金雙蛋炒飯,Double Eggs Fried Rice in XO Sauce`;\n    const takeawayData = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanLiteral(takeawayCSV);\n    const takeawayObject = _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateObject(\n      takeawayData.length,\n      takeawayData,\n      \"\",\n      false\n    );\n    _category_utility__WEBPACK_IMPORTED_MODULE_0__[\"default\"].populateTable(takeawayObject, \"All-Day Takeaway (全日外賣) (29.95)\\n\\nChoose Any 3 Items (任選以下三款小菜)\");\n  };\n  return {\n    houseSpecial,\n    appetizers,\n    soup,\n    seafood,\n    chickenDuckFrog,\n    beefLamb,\n    pork,\n    clayPot,\n    mushu,\n    lettuceWrap,\n    vegetables,\n    chowMeinFun,\n    friedRice,\n    congee,\n    ricePlates,\n    crab,\n    lobster,\n    takeaway\n  };\n})();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (categories);\n\n\n//# sourceURL=webpack:///./src/category.js?");

/***/ }),

/***/ "./src/footer.js":
/*!***********************!*\
  !*** ./src/footer.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst footerFragment = () => {\n  const footerDiv = document.createElement(\"div\");\n  const infoDiv = document.createElement(\"div\");\n  const sectionAddress = document.createElement(\"section\");\n  const addressLink = document.createElement(\"a\");\n  const sectionContact = document.createElement(\"section\");\n  const contactLink = document.createElement(\"a\");\n  const sectionHours = document.createElement(\"section\");\n  const sectionFrag = document.createDocumentFragment();\n  const footerFrag = document.createDocumentFragment();\n\n  footerDiv.className = \"footer\";\n  infoDiv.className = \"info\";\n\n  /** Address */\n  sectionAddress.className = \"address\";\n  addressLink.innerText =\n    \"2237 Taraval St , San Francisco, CA 94116 \\n Sunset District (Between 32nd and 33rd)\";\n  addressLink.href =\n    \"https://www.google.com/maps/place/Zhong+Shan+Hakka+Restaurant/@37.7422557,-122.4903221,15z/data=!4m5!3m4!1s0x0:0xde21cc529fccf39d!8m2!3d37.7422557!4d-122.4903221\";\n  addressLink.target = \"_blank\";\n  sectionAddress.appendChild(addressLink);\n  /** End Address */\n\n  /** Contact */\n  sectionContact.className = \"contact\";\n  contactLink.innerText = \"CALL: (415) 592-8938\";\n  contactLink.href = \"tel:4155928938\";\n  sectionContact.appendChild(contactLink);\n  /** End Contact */\n\n  sectionHours.className = \"hours\";\n  sectionHours.innerText = \"11AM - 3PM \\n 5-9:30PM \\n (THURSDAYS CLOSED)\";\n\n  sectionFrag.appendChild(sectionAddress);\n  sectionFrag.appendChild(sectionContact);\n  sectionFrag.appendChild(sectionHours);\n\n  infoDiv.appendChild(sectionFrag);\n  footerDiv.appendChild(infoDiv);\n  footerFrag.appendChild(footerDiv);\n  return footerFrag;\n};\n\nconst footerTag = () => {\n  return document.querySelector(\".footer\");\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ footerFragment, footerTag });\n\n\n//# sourceURL=webpack:///./src/footer.js?");

/***/ }),

/***/ "./src/header.js":
/*!***********************!*\
  !*** ./src/header.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst navbar = () => {\n  const logo = document.createElement(\"img\");\n  logo.src = \"./img/logo.png\";\n  const navContent = document.createElement(\"div\");\n  navContent.className = \"nav-content\";\n  navContent.appendChild(logo);\n\n  const nav = document.createElement(\"div\");\n  nav.className = \"nav-bar\";\n  nav.appendChild(navContent);\n\n  const navFragment = new DocumentFragment();\n  navFragment.appendChild(nav);\n\n  return navFragment;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (navbar);\n\n\n//# sourceURL=webpack:///./src/header.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header */ \"./src/header.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./options */ \"./src/options.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./footer */ \"./src/footer.js\");\n/* harmony import */ var _category__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./category */ \"./src/category.js\");\n\n\n\n\n\nconst fragment = new DocumentFragment();\nconst contents = [Object(_header__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(), _options__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainFragment(), _footer__WEBPACK_IMPORTED_MODULE_2__[\"default\"].footerFragment()];\n\nfor (let item of contents) {\n  fragment.appendChild(item);\n}\n\ndocument.querySelector(\".wrapper\").appendChild(fragment);\n\ndocument.addEventListener(\"click\", (e) => {\n  const buttonName = e.target.innerText;\n  switch (buttonName) {\n    case \"House Special (特色菜)\": // add category names into own object to be exported\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].houseSpecial();\n      break;\n    case \"Soup (湯羹類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].soup();\n      break;\n    case \"Beef & Lamb (牛羊類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].beefLamb();\n      break;\n    case \"Appetizers (餐前小食)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].appetizers();\n      break;\n    case \"Chicken & Duck & Frog (雞鴨田雞類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].chickenDuckFrog();\n      break;\n    case \"Mu Shu (木須類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].mushu();\n      break;\n    case \"Pork (豬肉類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pork();\n      break;\n    case \"Seafood (海鮮類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].seafood();\n      break;\n    case \"Crab (蟹)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].crab();\n      break;\n    case \"Lobster (龍蝦)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].lobster();\n      break;\n    case \"Clay Pot (煲仔類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].clayPot();\n      break;\n    case \"Lettuce Wraps (生菜包)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].lettuceWrap();\n      break;\n    case \"Chow Mein & Fun (粉麵類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].chowMeinFun();\n      break;\n    case \"Fried Rice (炒飯類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].friedRice();\n      break;\n    case \"Congee (粥類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].congee();\n      break;\n    case \"Vegetables (健康素菜類)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].vegetables();\n      break;\n    case \"Rice Plates & Soup (午餐碟飯送例湯)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ricePlates();\n      break;\n    case \"All-Day Takeaway (全日外賣)\":\n      _category__WEBPACK_IMPORTED_MODULE_3__[\"default\"].takeaway();\n      break;\n    default:\n      break;\n  }\n});\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/options.js":
/*!************************!*\
  !*** ./src/options.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst mainFragment = () => {\n  const mainContentFragment = new DocumentFragment();\n  const mainDiv = document.createElement(\"div\");\n  mainDiv.className = \"main\";\n\n  const foodCategory = () => {\n    const categoryArr = [\n      \"House Special (特色菜)\",\n      \"All-Day Takeaway (全日外賣)\",\n      \"Appetizers (餐前小食)\",\n      \"Soup (湯羹類)\",\n      \"Seafood (海鮮類)\",\n      \"Chicken & Duck & Frog (雞鴨田雞類)\",\n      \"Beef & Lamb (牛羊類)\",\n      \"Pork (豬肉類)\",\n      \"Clay Pot (煲仔類)\",\n      \"Mu Shu (木須類)\",\n      \"Lettuce Wraps (生菜包)\",\n      \"Vegetables (健康素菜類)\",\n      \"Chow Mein & Fun (粉麵類)\",\n      \"Fried Rice (炒飯類)\",\n      \"Congee (粥類)\",\n      \"Crab (蟹)\",\n      \"Lobster (龍蝦)\",\n      \"Rice Plates & Soup (午餐碟飯送例湯)\"\n    ];\n\n    const optionsDiv = document.createElement(\"div\");\n    const table = document.createElement(\"table\");\n    const categoryTableRow = document.createElement(\"tr\");\n    const categoryTableCell = document.createElement(\"td\");\n    const rowFragments = new DocumentFragment();\n\n    categoryArr.forEach( categoryName => {\n      const rowClone = categoryTableRow.cloneNode(true);\n      const cellClone = categoryTableCell.cloneNode(true);\n      cellClone.innerText = categoryName;\n      cellClone.className = \"btn\";\n      cellClone.setAttribute(\"data-toggle\", \"modal\");\n      cellClone.setAttribute(\"data-target\", \"#modalLong\");\n      rowClone.appendChild(cellClone);\n      rowFragments.appendChild(rowClone);\n    });\n\n    table.appendChild(rowFragments);\n    optionsDiv.appendChild(table);\n    optionsDiv.className = \"options\";\n\n    return optionsDiv;\n  };\n\n  mainDiv.appendChild(foodCategory());\n  mainContentFragment.appendChild(mainDiv);\n\n  return mainContentFragment;\n};\n\nconst mainTag = () => {\n  return document.querySelector(\".main\");\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({ mainFragment, mainTag });\n\n\n//# sourceURL=webpack:///./src/options.js?");

/***/ })

/******/ });